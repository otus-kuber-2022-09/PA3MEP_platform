apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {
        "apiVersion":"v1",
        "kind":"PersistentVolume",
        "metadata":
        {
          "annotations":{},
          "name":"data-default-consul-consul-server-0"
        },
        "spec":
        {
          "accessModes":["ReadWriteOnce"],
          "capacity":
          {
            "storage":"1Gi"
          },
          "local":
          {
              "path":"/srv/volumes/consul-volume"
          },
          "nodeAffinity":
          {
            required":
            {
              "nodeSelectorTerms":[
                {"matchExpressions":[
                  {
                    "key":"kubernetes.io/hostname","operator":"In","values":["kubik-node-1 kubik-node-2"]
                  }]
                }]
            }
          },
          "persistentVolumeReclaimPolicy":"Retain"
        }
  finalizers:
  - kubernetes.io/pv-protection
  name: data-default-consul-consul-server-0
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  local:
    path: /srv/volumes/consul-volume
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubik-node-1 kubik-node-2
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
  name: data-default-consul-consul-server-0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  volumeName: data-default-consul-consul-server-0